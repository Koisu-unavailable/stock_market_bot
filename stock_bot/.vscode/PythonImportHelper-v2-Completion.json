[
    {
        "label": "discord",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "discord",
        "description": "discord",
        "detail": "discord",
        "documentation": {}
    },
    {
        "label": "app_commands",
        "importPath": "discord",
        "description": "discord",
        "isExtraImport": true,
        "detail": "discord",
        "documentation": {}
    },
    {
        "label": "app_commands",
        "importPath": "discord",
        "description": "discord",
        "isExtraImport": true,
        "detail": "discord",
        "documentation": {}
    },
    {
        "label": "commands",
        "importPath": "discord.ext",
        "description": "discord.ext",
        "isExtraImport": true,
        "detail": "discord.ext",
        "documentation": {}
    },
    {
        "label": "commands",
        "importPath": "discord.ext",
        "description": "discord.ext",
        "isExtraImport": true,
        "detail": "discord.ext",
        "documentation": {}
    },
    {
        "label": "logging",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "logging",
        "description": "logging",
        "detail": "logging",
        "documentation": {}
    },
    {
        "label": "get_price_from_yahoo_finance",
        "importPath": "webscraper.get_stock",
        "description": "webscraper.get_stock",
        "isExtraImport": true,
        "detail": "webscraper.get_stock",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "stock_bot.cogs.stock",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "stock_bot.cogs.stock",
        "description": "stock_bot.cogs.stock",
        "detail": "stock_bot.cogs.stock",
        "documentation": {}
    },
    {
        "label": "load_dotenv",
        "importPath": "dotenv",
        "description": "dotenv",
        "isExtraImport": true,
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "MyCog",
        "kind": 6,
        "importPath": "cogs.stock",
        "description": "cogs.stock",
        "peekOfCode": "class MyCog(commands.Cog):\n  def __init__(self, bot: commands.Bot) -> None:\n    self.bot = bot\n  group = app_commands.Group(name=\"stock\", description=\"all stock related commands\")\n  # Above, we declare a command Group, in discord terms this is a parent command\n  # We define it within the class scope (not an instance scope) so we can use it as a decorator.\n  # This does have namespace caveats but i don't believe they're worth outlining in our needs.\n  @app_commands.command(name=\"top-command\")    # a command outside the group\n  async def my_top_command(self, interaction: discord.Interaction) -> None:\n    \"\"\" /top-command \"\"\"",
        "detail": "cogs.stock",
        "documentation": {}
    },
    {
        "label": "logger",
        "kind": 5,
        "importPath": "cogs.stock",
        "description": "cogs.stock",
        "peekOfCode": "logger = logging.getLogger(\"SetUp\")\nclass MyCog(commands.Cog):\n  def __init__(self, bot: commands.Bot) -> None:\n    self.bot = bot\n  group = app_commands.Group(name=\"stock\", description=\"all stock related commands\")\n  # Above, we declare a command Group, in discord terms this is a parent command\n  # We define it within the class scope (not an instance scope) so we can use it as a decorator.\n  # This does have namespace caveats but i don't believe they're worth outlining in our needs.\n  @app_commands.command(name=\"top-command\")    # a command outside the group\n  async def my_top_command(self, interaction: discord.Interaction) -> None:",
        "detail": "cogs.stock",
        "documentation": {}
    },
    {
        "label": "intents",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "intents = discord.Intents.all()\nclient = discord.Client(intents=intents)\nclient.tree = app_commands.CommandTree(client)\n@client.event\nasync def on_ready() -> None:\n    logging.info(\"Bot is ready!!\")\n    await client.tree.sync()\n    logging.info(\"Sync has run\")\n    await cogs.stock.setup(client)\n@client.tree.command(",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "client",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "client = discord.Client(intents=intents)\nclient.tree = app_commands.CommandTree(client)\n@client.event\nasync def on_ready() -> None:\n    logging.info(\"Bot is ready!!\")\n    await client.tree.sync()\n    logging.info(\"Sync has run\")\n    await cogs.stock.setup(client)\n@client.tree.command(\n    name=\"test\",",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "client.tree",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "client.tree = app_commands.CommandTree(client)\n@client.event\nasync def on_ready() -> None:\n    logging.info(\"Bot is ready!!\")\n    await client.tree.sync()\n    logging.info(\"Sync has run\")\n    await cogs.stock.setup(client)\n@client.tree.command(\n    name=\"test\",\n    description=\"test\"",
        "detail": "main",
        "documentation": {}
    }
]